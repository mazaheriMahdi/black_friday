version: '3.9'  # Specify the Compose file format version

services:
  app:
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/products2?schema=public"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: npm run start



  jaeger:
    container_name: jaeger

    networks:
      - backend
    image: jaegertracing/all-in-one:${JAEGER_IMAGE_TAG:-latest}
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=${PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR:-true}
      - PROMETHEUS_QUERY_NAMESPACE=${PROMETHEUS_QUERY_NAMESPACE:-}
      - PROMETHEUS_QUERY_DURATION_UNIT=${PROMETHEUS_QUERY_DURATION_UNIT:-}
      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
    ports:
      - "16686:16686"

  otel_collector:
    container_name: collector
    networks:
      backend:
        # This is the host name used in Prometheus scrape configuration.
        aliases: [ spm_metrics_source ]
    image: otel/opentelemetry-collector-contrib:${OTEL_IMAGE_TAG:-0.89.0}
    volumes:
      - ${OTEL_CONFIG_SRC:-./otel-collector-config-connector.yml}:/etc/otelcol/otel-collector-config.yml
    command: --config /etc/otelcol/otel-collector-config.yml
    environment:
      - POSTGRESQL_PASSWORD=postgres
    depends_on:
      - jaeger
    ports:
      - "8889:8889"
      - "4317:4317"
      - "4318:4318"

  prometheus:
    container_name: prometheus
    networks:
      - backend
    image: prom/prometheus:latest
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    networks:
      - backend
    image: grafana/grafana:latest
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

volumes:
  grafana-storage:

networks:
  backend:
  default:
    driver: bridge



